"use strict";(self.webpackChunkdocs_rancherdesktop_io=self.webpackChunkdocs_rancherdesktop_io||[]).push([[7512],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(n),f=a,m=d["".concat(s,".").concat(f)]||d[f]||c[f]||o;return n?r.createElement(m,l(l({ref:t},p),{},{components:n})):r.createElement(m,l({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return l}});var r=n(7294),a=n(4334),o="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,l),hidden:n},t)}},4866:function(e,t,n){n.d(t,{Z:function(){return N}});var r=n(3117),a=n(7294),o=n(4334),l=n(2466),i=n(6775),s=n(1980),u=n(7392),p=n(12);function c(e){return function(e){var t;return(null==(t=a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:t.filter(Boolean))??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function d(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function f(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const r=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(o),(0,a.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,o=d(e),[l,i]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!f({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[s,u]=m({queryString:n,groupId:r}),[c,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,p.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:r}),k=(()=>{const e=s??c;return f({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{k&&i(k)}),[k]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!f({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),h(e)}),[u,h,o]),tabValues:o}}var k=n(2389),y="tabList__CuJ",b="tabItem_LNqP";function g(e){let{className:t,block:n,selectedValue:i,selectValue:s,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.o5)(),d=e=>{const t=e.currentTarget,n=p.indexOf(t),r=u[n].value;r!==i&&(c(t),s(r))},f=e=>{var t;let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=p.indexOf(e.currentTarget)+1;n=p[t]??p[0];break}case"ArrowLeft":{const t=p.indexOf(e.currentTarget)-1;n=p[t]??p[p.length-1];break}}null==(t=n)||t.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>p.push(e),onKeyDown:f,onClick:d},l,{className:(0,o.Z)("tabs__item",b,null==l?void 0:l.className,{"tabs__item--active":i===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:r}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function w(e){const t=h(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",y)},a.createElement(g,(0,r.Z)({},e,t)),a.createElement(v,(0,r.Z)({},e,t)))}function N(e){const t=(0,k.Z)();return a.createElement(w,(0,r.Z)({key:String(t)},e))}},4765:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return c}});var r=n(3117),a=(n(7294),n(3905)),o=n(4866),l=n(5162);const i={title:"Skaffold and Rancher Desktop"},s=void 0,u={unversionedId:"how-to-guides/skaffold-and-rancher-desktop",id:"version-1.9-tech-preview/how-to-guides/skaffold-and-rancher-desktop",title:"Skaffold and Rancher Desktop",description:"Skaffold is a command line tool that facilitates continuous development for Kubernetes-native applications. Skaffold handles the workflow for building, pushing, and deploying your application, and it provides building blocks for creating CI/CD pipelines. This enables you to focus on iterating on your application locally while Skaffold continuously deploys to your local or remote Kubernetes cluster. To learn more about Skaffold, refer to the project docs here.",source:"@site/versioned_docs/version-1.9-tech-preview/how-to-guides/skaffold-and-rancher-desktop.md",sourceDirName:"how-to-guides",slug:"/how-to-guides/skaffold-and-rancher-desktop",permalink:"/1.9-tech-preview/how-to-guides/skaffold-and-rancher-desktop",draft:!1,editUrl:"https://github.com/rancher-sandbox/docs.rancherdesktop.io/edit/main/versioned_docs/version-1.9-tech-preview/how-to-guides/skaffold-and-rancher-desktop.md",tags:[],version:"1.9-tech-preview",frontMatter:{title:"Skaffold and Rancher Desktop"},sidebar:"tutorialSidebar",previous:{title:"Rancher on Rancher Desktop",permalink:"/1.9-tech-preview/how-to-guides/rancher-on-rancher-desktop"},next:{title:"Provisioning Scripts",permalink:"/1.9-tech-preview/how-to-guides/provisioning-scripts"}},p={},c=[],d={toc:c};function f(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Skaffold is a command line tool that facilitates continuous development for Kubernetes-native applications. Skaffold handles the workflow for building, pushing, and deploying your application, and it provides building blocks for creating CI/CD pipelines. This enables you to focus on iterating on your application locally while Skaffold continuously deploys to your local or remote Kubernetes cluster. To learn more about Skaffold, refer to the project docs ",(0,a.kt)("a",{parentName:"p",href:"https://skaffold.dev/docs/"},"here"),"."),(0,a.kt)("p",null,"In order to demonstrate the steps to set up Skaffold with Rancher Desktop, a sample nodejs app example is provided within the Rancher Desktop docs repository ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/rancher-sandbox/docs.rancherdesktop.io/tree/main/assets/express-sample"},"here"),". "),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Important: Skaffold only works with ",(0,a.kt)("inlineCode",{parentName:"strong"},"dockerd")," (Moby).")," Therefore, make sure to select your runtime as ",(0,a.kt)("inlineCode",{parentName:"p"},"dockerd")," from the ",(0,a.kt)("strong",{parentName:"p"},"Kubernetes Settings")," panel in the Rancher Desktop UI. ")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Visit ",(0,a.kt)("a",{parentName:"p",href:"https://skaffold.dev/docs/install/"},"https://skaffold.dev/docs/install/")," to install Skaffold.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Clone the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/rancher-sandbox/docs.rancherdesktop.io.git"},"Rancher Desktop docs repository")," and navigate to the ",(0,a.kt)("inlineCode",{parentName:"p"},"express-sample")," in a terminal as follows: "),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"cd docs.rancherdesktop.io/assets/express-sample\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Run ",(0,a.kt)("inlineCode",{parentName:"p"},"skaffold init"),"."),(0,a.kt)("p",{parentName:"li"},"Per the ",(0,a.kt)("a",{parentName:"p",href:"https://skaffold.dev/docs/pipeline-stages/init/#build-config-initialization"},"Skaffold docs"),",",(0,a.kt)("inlineCode",{parentName:"p"},"skaffold init")," walks through your project directory and looks for any build configuration files such as ",(0,a.kt)("inlineCode",{parentName:"p"},"Dockerfile"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"build.gradle/pom.xml"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"requirements.txt"),", or ",(0,a.kt)("inlineCode",{parentName:"p"},"go.mod"),". "),(0,a.kt)("p",{parentName:"li"},"We will select ",(0,a.kt)("inlineCode",{parentName:"p"},"Dockerfile")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," in our example. This will generate the initial configuration file that you can modify as needed. When prompted, select ",(0,a.kt)("inlineCode",{parentName:"p"},"yes")," to write your config to ",(0,a.kt)("inlineCode",{parentName:"p"},"skaffold.yaml"),". ")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"In your editor, review your ",(0,a.kt)("inlineCode",{parentName:"p"},"app.js")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"manifests.yaml")," files. Note that in ",(0,a.kt)("inlineCode",{parentName:"p"},"manifests.yaml"),", you will have a deployment config as well as a service config. It is only necessary to have 1 ",(0,a.kt)("inlineCode",{parentName:"p"},"replica")," for testing purposes.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Back in your terminal, you'll notice that you will have two options: ",(0,a.kt)("inlineCode",{parentName:"p"},"skaffold run")," that lets you build and deploy, and ",(0,a.kt)("inlineCode",{parentName:"p"},"skaffold dev")," that allows you to enter development mode with auto-redeploy. We will use ",(0,a.kt)("inlineCode",{parentName:"p"},"skaffold dev")," in this example."),(0,a.kt)("p",{parentName:"li"}," As you will need to have push access to the image repository, you can either use your docker login, or you can set up a local registry: "),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"docker-hub",label:"Docker Hub",default:!0,mdxType:"TabItem"},(0,a.kt)("p",{parentName:"li"},"  Before running ",(0,a.kt)("inlineCode",{parentName:"p"},"skaffold dev"),", use your docker login if you have a ",(0,a.kt)("a",{parentName:"p",href:"https://hub.docker.com/"},"Docker Hub")," account. Then, in the files ",(0,a.kt)("inlineCode",{parentName:"p"},"skaffold.yaml")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"manifests.yaml")," replace ",(0,a.kt)("inlineCode",{parentName:"p"},"matamagu/express-sample")," for ",(0,a.kt)("inlineCode",{parentName:"p"},"YOUR_DOCKER_HUB_USERNAME/express-sample")," as ",(0,a.kt)("inlineCode",{parentName:"p"},"skaffold dev")," will push the built image to DockerHub.")),(0,a.kt)(l.Z,{value:"local-registry",label:"Local Registry",mdxType:"TabItem"},"You can set up a local registry by first running this command:",(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"docker run -d -p 5000:5000 --restart=always --name registry registry:2\n")),(0,a.kt)("p",{parentName:"li"},"  Then:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"skaffold dev --default-repo=localhost:5000\n")))),(0,a.kt)("p",{parentName:"li"},"As you go through your development, Skaffold will detect any changes and will automatically go through the build and deployment process again. You will be able to see any changes reflected in the cluster.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Point your web browser to ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost:3000"),", and you will see the ",(0,a.kt)("inlineCode",{parentName:"p"},"express-sample")," screen."))))}f.isMDXComponent=!0}}]);